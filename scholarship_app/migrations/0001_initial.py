# Generated by Django 4.2.7 on 2025-09-12 09:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Scholarship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('provider', models.CharField(max_length=200)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('deadline', models.DateField()),
                ('description', models.TextField()),
                ('eligibility', models.TextField()),
                ('application_process', models.TextField()),
                ('website', models.URLField()),
                ('scholarship_type', models.CharField(choices=[('merit', 'Merit-Based'), ('need', 'Need-Based'), ('athletic', 'Athletic'), ('creative', 'Creative Arts'), ('minority', 'Minority'), ('international', 'International'), ('disability', 'Disability'), ('field_specific', 'Field Specific')], max_length=20)),
                ('education_level', models.CharField(choices=[('high_school', 'High School'), ('undergraduate', 'Undergraduate'), ('graduate', 'Graduate'), ('phd', 'PhD'), ('any', 'Any')], max_length=20)),
                ('min_gpa', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('max_age', models.IntegerField(blank=True, null=True)),
                ('min_age', models.IntegerField(blank=True, null=True)),
                ('citizenship_requirements', models.TextField(blank=True)),
                ('field_of_study_requirements', models.TextField(blank=True)),
                ('minority_preferences', models.TextField(blank=True)),
                ('disability_preferences', models.TextField(blank=True)),
                ('income_max', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('income_min', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('nationality', models.CharField(blank=True, max_length=100)),
                ('citizenship', models.CharField(blank=True, max_length=100)),
                ('education_level', models.CharField(choices=[('high_school', 'High School'), ('undergraduate', 'Undergraduate'), ('graduate', 'Graduate'), ('phd', 'PhD')], max_length=20)),
                ('field_of_study', models.CharField(blank=True, max_length=100)),
                ('gpa', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('graduation_year', models.IntegerField(blank=True, null=True)),
                ('family_income', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('financial_aid_needed', models.BooleanField(default=False)),
                ('extracurriculars', models.TextField(blank=True)),
                ('achievements', models.TextField(blank=True)),
                ('disabilities', models.TextField(blank=True)),
                ('minority_groups', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ForumTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ForumReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='scholarship_app.forumtopic')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ScholarshipRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('reason', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('scholarship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scholarship_app.scholarship')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scholarship_app.studentprofile')),
            ],
            options={
                'unique_together': {('student', 'scholarship')},
            },
        ),
    ]
